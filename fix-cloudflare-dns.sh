#!/bin/bash
# Cloudflare DNS Î∞è Public Hostname Î¨∏Ï†ú Ìï¥Í≤∞

echo "üîß Fixing Cloudflare DNS and Public Hostname"
echo "==========================================="

TUNNEL_ID="e00b68ad-aaac-4fa6-be5d-af54def58a21"
HOSTNAME="webhook.yeonsik.com"

echo "üìä Current Status:"
echo "Tunnel ID: $TUNNEL_ID"
echo "Hostname: $HOSTNAME"
echo ""

echo "üîç Checking current routes..."
cloudflared tunnel route list --filter-tunnel-id=$TUNNEL_ID || echo "No filter available"

echo ""
echo "üìã Manual Fix Instructions:"
echo "=========================="
echo ""
echo "Option A: Keep existing DNS, add Public Hostname in Dashboard"
echo "-------------------------------------------------------------"
echo "1. Go to: https://dash.cloudflare.com"
echo "2. Navigate: Zero Trust ‚Üí Access ‚Üí Tunnels ‚Üí webhook ‚Üí Configure"
echo "3. Click 'Public Hostname' tab"
echo "4. If 'webhook.yeonsik.com' exists:"
echo "   - Click Edit (pencil icon)"
echo "   - Ensure Service is: HTTP, localhost:3000"
echo "   - Save"
echo "5. If not exists:"
echo "   - Click 'Add a public hostname'"
echo "   - Subdomain: webhook"
echo "   - Domain: yeonsik.com"
echo "   - Service: HTTP"
echo "   - URL: localhost:3000"
echo "   - Save"
echo ""

echo "Option B: Delete DNS and recreate in Dashboard"
echo "-----------------------------------------------"
echo "1. Delete DNS record from Cloudflare DNS settings:"
echo "   - Go to: https://dash.cloudflare.com"
echo "   - Select your domain (yeonsik.kim)"
echo "   - Go to DNS settings"
echo "   - Find 'webhook' CNAME record"
echo "   - Delete it"
echo ""
echo "2. Add Public Hostname in Tunnel settings:"
echo "   - Zero Trust ‚Üí Tunnels ‚Üí webhook ‚Üí Configure"
echo "   - Public Hostname ‚Üí Add"
echo "   - Follow steps from Option A"
echo ""

echo "Option C: Use API to force update"
echo "---------------------------------"
echo "If you have Cloudflare API token:"
echo ""
echo "curl -X PUT https://api.cloudflare.com/client/v4/accounts/{account_id}/cfd_tunnel/{tunnel_id}/configurations \\"
echo "  -H 'Authorization: Bearer {API_TOKEN}' \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"config": {"ingress": [{"hostname": "webhook.yeonsik.com", "service": "http://localhost:3000"}, {"service": "http_status:404"}]}}'"
echo ""

echo "üß™ Test after configuration:"
echo "============================"
echo "Wait 2-3 minutes, then test:"
echo "curl https://webhook.yeonsik.com/health"
echo ""
echo "Expected response:"
echo '{"status":"healthy","timestamp":"...","service":"claude-webhook-server","version":"1.0.0"}'